{"version":3,"sources":["components/dashboard/Dashboard.jsx","components/home/home.jsx","components/navbar/navData.jsx","components/navbar/nav.jsx","components/jobs/Model.jsx","utils/agent.js","components/users/userList.jsx","components/users/userAdd.jsx","components/jobs/Job.jsx","components/jobs/JobAdd.jsx","utils/url.js","components/category/CategoryUpdate.jsx","components/category/Category.jsx","components/login/Login.jsx","components/users/FilterUser.jsx","components/jobs/FilterJob.jsx","components/course/CourseUpdate.jsx","components/course/Course.jsx","components/qualification/QualUpdate.jsx","components/qualification/Qualification.jsx","components/payment/Plan.jsx","components/appliedjobs/ApplieduseList.jsx","App.js","index.js"],"names":["Dashboard","className","class","Card","border","style","width","Header","Body","Title","bg","HomePage","SidebarData","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","showSidebar","Provider","value","color","to","onClick","map","item","index","Model","props","data","setData","useEffect","console","log","pass","as","companyName","status","Badge","pill","variant","certified","Text","companyaddress","companyMob","noOfVacencies","jobPosition","description","workingTime","experience","salary","Skills","feild","location","recruiter","lastDate","base_url","tokenPlugin","req","token","localStorage","getItem","set","post","url","body","a","superagent","use","response","Job","mount","fetchData","then","result","doc","catch","err","display","justifyContent","alignItems","Grid","container","spacing","justify","component","xs","md","Typography","gutterBottom","UserAdd","Form","Row","Group","Col","controlId","Label","Control","w","Button","type","setmount","searchTerm","setSearchTerm","setPass","Active","sStatus","length","date","moment","format","filter","Table","striped","aria-hidden","FormControl","placeholder","onChange","event","target","includes","primeMember","substring","_id","res","window","reload","JobAdd","useRef","currentDate","skill","setSkill","courses","setCourses","qualification","setQualification","companyAddress","course","field","verifiedBy","values","setValues","fetchCategory","fetchCourse","fetchQual","submit","keys","i","bool","SkillAdd","e","el","key","onSubmit","required","name","Autocomplete","multiple","id","options","getOptionLabel","option","slice","renderInput","params","TextField","backgroundColor","CategoryUpdate","parent","sortOrder","image","translations","english","imageAdd","formdata","FormData","append","files","flexDirection","Category","passData","setPassData","skills","setSkills","marginTop","height","src","Login","mobile","password","handle","newData","padding","borderRadius","size","preventDefault","setItem","error","FormLabel","FilterUser","setfilter","taluk","settaluk","districts","dist","tname","textAlign","t","filterlist","district","qual","lan","FilterJob","categories","setCategories","CourseUpdate","Course","setCourse","QualUpdate","Qualification","setQual","Plan","plan","setPlan","policy","amount","ApplieduseList","list","setList","match","message","App","exact","UserList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12df9737.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./dash.css\";\nimport Card from \"react-bootstrap/Card\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n  return (\n    <div className=\"dashboard\">\n      <h1>Jobs</h1>\n      <div class=\"cards\">\n        <div class=\"cards__item\">\n          <Card border=\"success\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Active Jobs</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>253</h1>\n              </Card.Title>\n              {/* <Link to=\"/jobs\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n        <div class=\"cards__item\">\n          <Card border=\"primary\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Total Jobs</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>1234</h1>\n              </Card.Title>\n              {/* <Link to=\"/jobs\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n        <div class=\"cards__item\">\n          <Card border=\"warning\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Shortly Expired Jobs</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>9</h1>\n              </Card.Title>\n              {/* <Link to=\"/jobs\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n        <div class=\"cards__item\">\n          <Card border=\"danger\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Expired Jobs</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>35</h1>\n              </Card.Title>\n              {/* <Link to=\"/jobs\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n\n      <h1>Users</h1>\n\n      <div class=\"cards\">\n        <div class=\"cards__item\">\n          <Card border=\"success\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Total Users</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>999</h1>{\" \"}\n              </Card.Title>\n              {/* <Link to=\"/users\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n        <div class=\"cards__item\">\n          <Card border=\"warning\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header bg=\"warning\">Prime Users</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>569</h1>{\" \"}\n              </Card.Title>\n              {/* <Link to=\"/users\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n        <div class=\"cards__item\">\n          <Card border=\"danger\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Recently Expiring</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>59</h1>{\" \"}\n              </Card.Title>\n              {/* <Link to=\"/users\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n\n      <h1>Plans</h1>\n\n      <div class=\"cards\">\n        <div class=\"cards__item\">\n          <Card border=\"primary\" style={{ width: \"23rem\" }} className=\"mb-2\">\n            <Card.Header>Plans</Card.Header>\n            <Card.Body>\n              <Card.Title>\n                <h1>3</h1>\n              </Card.Title>\n              {/* <Link to=\"/payment\">View More</Link> */}\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"./home.css\";\nimport Image from \"react-bootstrap/Image\";\nimport Dashboard from \"../dashboard/Dashboard\";\n\nfunction HomePage() {\n  return (\n    <div className=\"main\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData = [\n  {\n    title: \"Home\",\n    path: \"/\",\n    icon: <AiIcons.AiFillHome />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Jobs\",\n    path: \"/jobs\",\n    icon: <AiIcons.AiFillBuild />,\n    cName: \"nav-text\",\n  },\n  // {\n  //   title: \"AppliedJob\",\n  //   path: \"/appliedjob\",\n  //   icon: <AiIcons.AiFillBuild />,\n  //   cName: \"nav-text\",\n  // },\n  // {\n  //   title:'Add Jobs',\n  //   path: '/jobs-add',\n  //   icon: <AiIcons.AiFillBuild/>,\n  //   cName:'nav-text'\n  // },\n  // {\n  //   title: \"Users\",\n  //   path: \"/users\",\n  //   icon: <IoIcons.IoMdPeople />,\n  //   cName: \"nav-text\",\n  // },\n  // {\n  //   title: \"Add User\",\n  //   path: \"/users-add\",\n  //   icon: <IoIcons.IoIosAddCircle />,\n  //   cName: \"nav-text\",\n  // },\n  {\n    title: \"Category\",\n    path: \"/category\",\n    icon: <IoIcons.IoMdHelpCircle />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Course\",\n    path: \"/course\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Qualification\",\n    path: \"/qualification\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Payment\",\n    path: \"/payment\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SidebarData } from \"./navData\";\nimport { IconContext } from \"react-icons\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport \"./nav.css\";\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        <div className=\"navbar\">\n          <Link to=\"#\" className=\"menu-bars\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </Link>\n        </div>\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n          <ul className=\"nav-menu-items\" onClick={showSidebar}>\n            <li className=\"navbar-toggle\">\n              <Link to=\"#\" className=\"menu-bars\">\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\nimport \"./job.css\";\n\nimport Card from \"react-bootstrap/Card\";\nfunction Model(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    console.log(props.pass[0]);\n    setData(props.pass[0]);\n  }, []);\n  return (\n    <div>\n      <div className=\"userdata\">\n        <Card border=\"primary\">\n          <Card.Header as=\"h5\">\n            <div className=\"card-user\">{data.companyName}</div>\n          </Card.Header>\n          <Card.Body>\n            <Card.Title>\n              {data.status ? (\n                <Badge pill variant=\"success\">\n                  Active\n                </Badge>\n              ) : (\n                <Badge pill variant=\"danger\">\n                  Expired\n                </Badge>\n              )}\n              {data.certified ? (\n                <Badge pill variant=\"success\">\n                  Certified\n                </Badge>\n              ) : (\n                <Badge pill variant=\"danger\">\n                  Not Certified\n                </Badge>\n              )}\n            </Card.Title>\n            <Card.Text>Company Address : {data.companyaddress}</Card.Text>\n            <Card.Text>Company Mobile : {data.companyMob}</Card.Text>\n            <Card.Text>Number of Vacancies : {data.noOfVacencies}</Card.Text>\n            <Card.Text>Job Position : {data.jobPosition}</Card.Text>\n            <Card.Text>Description : {data.description}</Card.Text>\n            <Card.Text>Working Time: {data.workingTime}</Card.Text>\n            <Card.Text>Experience : {data.experience}</Card.Text>\n            <Card.Text>Salary : {data.salary}</Card.Text>\n            <Card.Text>Skills : {data.Skills}</Card.Text>\n            <Card.Text>Feild : {data.feild}</Card.Text>\n            <Card.Text>Working Time: {data.workingTime}</Card.Text>\n            <Card.Text>Location : {data.location}</Card.Text>\n            <Card.Text>Recruiter : {data.recruiter}</Card.Text>\n            <Card.Text>Last Date : {data.lastDate}</Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Model;\n","import superagent from \"superagent\";\n\nexport const imageurl = \"http://localhost:7000/img/\";\n// const base_url = \"http://localhost:7000\";\nconst base_url = \"http://13.232.167.189:7000\";\n\nconst tokenPlugin = (req) => {\n  var token = localStorage.getItem(\"auth-key\");\n  console.log(token);\n  if (token) {\n    req.set(\"authorization\", token);\n  }\n};\n\nexport const get = async (url) => {\n  try {\n    const response = await superagent.get(`${base_url}${url}`).use(tokenPlugin);\n    return response;\n  } catch (err) {}\n};\nexport const post = async (url, body) => {\n  try {\n    const response = await superagent\n      .post(`${base_url}${url}`, body)\n      .use(tokenPlugin);\n    return response;\n  } catch (err) {}\n};\nexport const put = async (url, body) => {\n  try {\n    const response = await superagent\n      .put(`${base_url}${url}`, body)\n      .use(tokenPlugin);\n    return response;\n  } catch (err) {}\n};\nexport const Delete = async (url, body) => {\n  try {\n    const response = await superagent\n      .delete(`${base_url}${url}`)\n      .use(tokenPlugin);\n    return response;\n  } catch (err) {}\n};\n\n// export const setToken = (_token) => {\n//   token = _token;\n// };\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { Badge, FormControl, Table } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../jobs/Model\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\n\nimport Card from \"react-bootstrap/Card\";\nimport { post } from \"../../utils/agent\";\n// import { getJOb, listJobs } from \"../../utils/url\";\n\nexport default function Job() {\n  const [mount, setmount] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [pass, setPass] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // fetchData\n\n  const fetchData = async () => {\n    post(\"/user/profile/getuser\", {})\n      .then((result) => {\n        console.log({ result: result.body.doc });\n        // setData(result.body.doc);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // search data\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n    // console.log(searchTerm);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div>\n        <div className=\"dashcards\">\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className=\"card\">\n              <Card.Body>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  ACTIVE Users\n                </Typography>\n                <Typography variant=\"h5\">9999</Typography>\n                <Typography variant=\"body2\">Number Of Active Users</Typography>\n              </Card.Body>\n            </Grid>\n\n            {/* <Grid item component={Card} xs={12} md={3} className=\"card\">\n              <Card.Body>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  EXPIRED JOBS\n                </Typography>\n                <Typography variant=\"h5\"> 9999</Typography>\n\n                <Typography variant=\"body2\">Number Of Expired jobs</Typography>\n              </Card.Body>\n            </Grid> */}\n\n            {/* <Grid item component={Card} xs={12} md={3} className=\"card\">\n              <Card.Body>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  SHORTLY EXPIRING JOBS\n                </Typography>\n                <Typography variant=\"h5\">9999</Typography>\n\n                <Typography variant=\"body2\">Jobs going to expire</Typography>\n              </Card.Body>\n            </Grid> */}\n          </Grid>\n        </div>\n        <br />\n        {mount && <Modal pass={pass} />}\n        Profile List\n        <div className=\"tableContainer\">\n          {/* <Table>\n            <thead className=\"tableHead\">\n              <tr>\n                <th>Name</th>\n                <th>Course</th>\n                <th>Skills</th>\n                <th>Taluk</th>\n                <th>Qualification</th>\n                <th>Course</th>\n                <th>WorkStatus</th>\n                <th>Image</th>\n                <th>Dob</th>\n                <th>Status</th>\n                <th></th>\n                <th>\n                  <FormControl\n                    className=\"search\"\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    value={searchTerm}\n                    onChange={handleChange}\n                  />\n                </th>\n                <th>\n                  <Link to=\"/filteruser\">\n                    <Button variant=\"light\">\n                      {\" \"}\n                      <i className=\"fas fa-filter\" />\n                    </Button>\n                  </Link>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((data, index) => (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{data.companyName}</td>\n                  <td>{data.userId.name}</td>\n                  <td>{data.course}</td>\n                  <td>skills</td>\n                  <td>{data.taluk}</td>\n                  <td>{data.qualification}</td>\n                  <td>{data.course}</td>\n                  <td>\n                    {data.status ? (\n                      <Badge pill variant=\"success\">\n                        Active\n                      </Badge>\n                    ) : (\n                      <Badge pill variant=\"danger\">\n                        Lapsed\n                      </Badge>\n                    )}\n                  </td>\n                  <td>Image</td>\n                  <td>{data.dob}</td>\n                  <td>\n                    <Button\n                      variant=\"info\"\n                      onClick={() => {\n                        post(\"/job/getJob\", {\n                          _id: data._id,\n                        }).then((res) => {\n                          setPass(res.body.doc);\n                          setmount(!mount);\n                        });\n                      }}\n                    >\n                      <i class=\"fas fa-info\"></i>\n                    </Button>\n                  </td>\n                  <td>\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => {\n                        post(\"/job/delete\", {\n                          _id: data._id,\n                        })\n                          .then(() => {\n                            window.location.reload(false);\n                          })\n                          .catch((err) => {\n                            console.log(err);\n                          });\n                      }}\n                    >\n                      <i className=\"fas fa-times\" />\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Button , Form ,Col} from 'react-bootstrap';\n\n\nexport default function UserAdd() {\n    return (\n<div className='container'>\n        <Form className=\"form-con\"> \n            <Form.Row >\n            <Form.Group as={Col} controlId=\"uname\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control />\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"umail\">\n                <Form.Label>E-Mail</Form.Label>\n                <Form.Control/>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"uphone\">\n                <Form.Label>Phone</Form.Label>\n                <Form.Control  />\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"udob\">\n                <Form.Label>Date of Birth</Form.Label>\n                <Form.Control  />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"aboutCompany\">\n                <Form.Label>Gender</Form.Label>\n                <Form.Control w />\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"add1\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"add2\">\n                <Form.Label>Address line 2</Form.Label>\n                <Form.Control />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"add3\">\n                <Form.Label>Address line 3 </Form.Label>\n                <Form.Control  />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"add4\">\n                <Form.Label>Pincode</Form.Label>\n                <Form.Control  />\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"aboutCompany\">\n                <Form.Label>Qualification</Form.Label>\n                <Form.Control as='textarea' />\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"aboutCompany\">\n                <Form.Label>Previous Jobs (If Any)</Form.Label>\n                <Form.Control as='textarea' />\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"aboutCompany\">\n                <Form.Label> Experience (If Any)</Form.Label>\n                <Form.Control as='textarea' />\n            </Form.Group>\n            </Form.Row>\n\n        </Form>\n        <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</div> \n  )\n}","import React, { useEffect, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/styles\";\nimport Button from \"react-bootstrap/Button\";\nimport { Badge, FormControl, Table } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport \"./job.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"./Model\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\n\nimport Card from \"react-bootstrap/Card\";\nimport { post } from \"../../utils/agent\";\n// import { getJOb, listJobs } from \"../../utils/url\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650,\n//   },\n// });\n\nexport default function Job() {\n  // const classes = useStyles();\n  const [mount, setmount] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [activeJobs, setActiveJobs] = useState([]);\n  const [data, setData] = useState([]);\n  const [pass, setPass] = useState([]);\n  const [userPass, setUserPass] = useState([]);\n  useEffect(() => {\n    fetchData();\n    // console.log(data.filter(checkStatus).length);\n    // console.log(data.name.length);\n    console.log({ Active: sStatus.length });\n  }, []);\n\n  // date assign\n  let date = moment().format(\"YYYY-MM-DD\");\n  // fetchData\n\n  const fetchData = async (body) => {\n    post(\"/job/filter\", body)\n      .then((result) => {\n        console.log(result.body.doc);\n        setData(result.body.doc);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let sStatus = data.filter((data) => data.status == 1);\n\n  // search data\n\n  function handleChange(event) {\n    setSearchTerm(event.target.value);\n    // console.log(searchTerm);\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div>\n        <div className=\"dashcards\">\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className=\"card\">\n              <Card.Body>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  ACTIVE JOBS\n                </Typography>\n                <Typography variant=\"h5\">9999</Typography>\n                <Typography variant=\"body2\">Number Of Active Jobs</Typography>\n              </Card.Body>\n            </Grid>\n\n            <Grid item component={Card} xs={12} md={3} className=\"card\">\n              <Card.Body>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  EXPIRED JOBS\n                </Typography>\n                <Typography variant=\"h5\"> 9999</Typography>\n\n                <Typography variant=\"body2\">Number Of Expired jobs</Typography>\n              </Card.Body>\n            </Grid>\n\n            <Grid item component={Card} xs={12} md={3} className=\"card\">\n              <Card.Body>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  SHORTLY EXPIRING JOBS\n                </Typography>\n                <Typography variant=\"h5\">9999</Typography>\n\n                <Typography variant=\"body2\">Jobs going to expire</Typography>\n              </Card.Body>\n            </Grid>\n          </Grid>\n        </div>\n        <br />\n        {mount && <Modal pass={pass} />}\n        {/* Job{date} */}\n        <div className=\"tableContainer container\">\n          <Table striped>\n            <thead className=\"tableHead\">\n              <tr>\n                <th>SlNo</th>\n                <th>Company Name</th>\n                <th>Vacancies</th>\n                <th>Company Mobile</th>\n                <th>Job Position</th>\n                {/* <th>Skills</th> */}\n                <th>Salary</th>\n                <th>Location</th>\n                <th>Status</th>\n                <th>lastDate</th>\n                <th>PrimeMember</th>\n                <th>\n                  <Link to=\"/jobs-add\">\n                    <Button variant=\"light\">\n                      <i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </Link>\n                </th>\n                <th>\n                  <FormControl\n                    className=\"search\"\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    value={searchTerm}\n                    onChange={handleChange}\n                  />\n                </th>\n                <th>\n                  <Link to=\"/filterjob\">\n                    <Button variant=\"light\">\n                      <i className=\"fas fa-filter\" />\n                    </Button>\n                  </Link>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {data\n                .filter(\n                  (data) =>\n                    data.companyName.includes(searchTerm) ||\n                    data.location.includes(searchTerm) ||\n                    data.salary.includes(searchTerm) ||\n                    data.primeMember.includes(searchTerm)\n                )\n                .map((data, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{data.companyName}</td>\n                    <td>{data.noOfVacencies}</td>\n                    <td>{data.companyMob}</td>\n                    <td>{data.jobPosition}</td>\n                    {/* <td>{data.Skills}</td> */}\n                    <td>{\"₹ \" + data.salary}</td>\n                    <td>{data.location}</td>\n\n                    <td>\n                      {data.status === 1 ? (\n                        <Badge pill variant=\"success\">\n                          Active\n                        </Badge>\n                      ) : (\n                        <Badge pill variant=\"danger\">\n                          Lapsed\n                        </Badge>\n                      )}\n                    </td>\n                    <td>{data.lastDate.substring(0, 10)}</td>\n                    <td>{data.primeMember}</td>\n                    <td>\n                      <Button\n                        variant=\"info\"\n                        onClick={() => {\n                          post(\"/job/filter\", {\n                            _id: data._id,\n                          }).then((res) => {\n                            // console.log(res.body.doc);\n                            setPass(res.body.doc);\n                            setmount(!mount);\n                          });\n                        }}\n                      >\n                        <i class=\"fas fa-info\"></i>\n                      </Button>\n                    </td>\n                    <td>\n                      <Link to={`/applicantlist/${data._id}`}>\n                        <Button\n                        // onClick={() => {\n                        //   post(\"/user/filter\", { _id: data._id }).then(\n                        //     (res) => {\n                        //       console.log(res.body);\n                        //       setUserPass(res.body.doc);\n\n                        //     }\n                        //   );\n                        // }}\n                        >\n                          Applicants\n                        </Button>\n                      </Link>\n                    </td>\n                    <td>\n                      {date <= data.lastDate.substring(0, 10) ? (\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => {\n                            post(\"/job/delete\", {\n                              _id: data._id,\n                            })\n                              .then(() => {\n                                window.location.reload(false);\n                              })\n                              .catch((err) => {\n                                console.log(err);\n                              });\n                          }}\n                        >\n                          <i className=\"fas fa-times\" />\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => {\n                            post(\"/job/delete\", {\n                              _id: data._id,\n                            })\n                              .then(() => {\n                                window.location.reload(false);\n                              })\n                              .catch((err) => {\n                                console.log(err);\n                              });\n                          }}\n                        >\n                          <i class=\"fas fa-calendar-times\"></i>\n                        </Button>\n                      )}\n                    </td>\n                    <td></td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useRef } from \"react\";\n\nimport moment from \"moment\";\nimport * as ReactDOM from \"react-dom\";\nimport { createJob } from \"../../utils/url\";\nimport { post } from \"../../utils/agent\";\nimport { Link } from \"react-router-dom\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: 500,\n//     \"& > * + *\": {\n//       marginTop: theme.spacing(3),\n//     },\n//   },\n// }));\n\nexport default function JobAdd() {\n  const refs = useRef();\n  const currentDate = moment().format(\"DD-MM-YYYY hh:mm:ss\");\n  const [skill, setSkill] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [qualification, setQualification] = useState([]);\n  const [values, setValues] = useState({\n    companyName: \"\",\n    description: \"\",\n    companyAddress: \"\",\n    companyMob: \"\",\n    jobPosition: \"\",\n    noOfVacencies: \"\",\n    Skills: \"\",\n    status: \"1\",\n    qualification: \"\",\n    course: \"\",\n    salary: \"\",\n    experience: \"\",\n    certified: \"yes\",\n    field: \"\",\n    workingTime: \"\",\n    recruiter: \"\",\n    lastDate: currentDate,\n    location: \"\",\n    primeMember: \"yes\",\n    verifiedBy: \"root\",\n  });\n\n  useEffect(() => {\n    fetchCategory();\n    fetchCourse();\n    fetchQual();\n  }, []);\n  const fetchCategory = async () => {\n    let response = await post(\"/skill/list\").then((response) => {\n      console.log(response.body.doc);\n      setSkill(response.body.doc);\n    });\n  };\n\n  const fetchCourse = async () => {\n    let response = await post(\"/course/list\").then((response) => {\n      console.log({ courses: response.body.doc });\n      setCourses(response.body.doc);\n    });\n  };\n  const fetchQual = async () => {\n    let response = await post(\"/qualification/list\").then((response) => {\n      console.log(response.body.doc);\n      setQualification(response.body.doc);\n    });\n  };\n\n  // submit data\n\n  const submit = () => {\n    let body = {};\n    let keys = [\n      \"companyName\",\n      \"description\",\n      \"companyAddress\",\n      \"companyMob\",\n      \"jobPosition\",\n      \"noOfVacencies\",\n      \"Skills\",\n      \"status\",\n      \"course\",\n      \"qualification\",\n      \"salary\",\n      \"experience\",\n      \"certified\",\n      \"field\",\n      \"workingTime\",\n      \"recruiter\",\n      \"lastDate\",\n      \"location\",\n      \"primeMember\",\n      \"verifiedBy\",\n    ];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(this.refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.Skills = {\n      Skills: values._id,\n    };\n\n    post(createJob, body)\n      .then((result) => {\n        // console.log(result);\n      })\n      .catch(console.log);\n\n    console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n  const SkillAdd = (e) => {\n    let Skills = e.map((el) => el._id);\n    console.log(Skills);\n    setValues({ ...values });\n  };\n\n  // const courseAdd = (e) => {\n  //   let course = e.map((el) => el._id);\n  //   console.log(course);\n  //   setValues({ ...values });\n\n  // };\n  // const qualificationAdd = (e) => {\n  //   let qualification = e.map((el) => el._id);\n  //   console.log(qualification);\n  //   setValues({ ...values });\n\n  // };\n\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n    console.log(values);\n  };\n\n  return (\n    <div className=\"container\">\n      <Form className=\"form-con\" onSubmit={submit}>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>COMPANY NAME</Form.Label>\n            <Form.Control\n              required\n              name=\"companyName\"\n              type=\"input\"\n              placeholder=\"Company Name\"\n              onChange={(e) => setData(e, \"companyName\")}\n              value={values.companyName}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label> COMPANY ADDRESS</Form.Label>\n            <Form.Control\n              required\n              as=\"textarea\"\n              name=\"companyAddress\"\n              type=\"input\"\n              placeholder=\"Company Address\"\n              onChange={(e) => setData(e, \"companyAddress\")}\n              values={values.companyAddress}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label> COMPANY MOBILE</Form.Label>\n            <Form.Control\n              required\n              name=\"companyMob\"\n              type=\"number\"\n              placeholder=\"Mobile\"\n              onChange={(e) => setData(e, \"companyMob\")}\n              values={values.companyMob}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>JOB POSITION</Form.Label>\n            <Form.Control\n              required\n              name=\"jobPosition\"\n              type=\"input\"\n              placeholder=\"Position\"\n              onChange={(e) => setData(e, \"jobPosition\")}\n              values={values.jobPosition}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Label>Skill</Form.Label>\n\n          <Autocomplete\n            name=\"Skills\"\n            multiple\n            id=\"tags-outlined\"\n            options={skill}\n            onChange={(e, values) => SkillAdd(values)}\n            value={SkillAdd.Skills}\n            getOptionLabel={(option) => option.name.slice(1)}\n            renderInput={(params) => (\n              <TextField\n                placeholder=\"Category\"\n                {...params}\n                variant=\"outlined\"\n                style={{ backgroundColor: \"white\" }}\n              />\n            )}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>QUALIFICATION</Form.Label>\n\n          <Form.Row>\n            <Form.Group controlId=\"course\">\n              <Form.Label>Qualification</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={(e) => setData(e, \"qualification\")}\n              >\n                {qualification.map((data, index) => (\n                  <option key={index} value={data._id}>\n                    {data.name.slice(1)}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Form.Row>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Course</Form.Label>\n\n          <Form.Row>\n            <Form.Group controlId=\"course\">\n              {/* <Form.Label>Course</Form.Label> */}\n              <Form.Control as=\"select\" onChange={(e) => setData(e, \"course\")}>\n                {courses.map((data, index) => (\n                  <option key={index} value={data._id}>\n                    {data.name.slice(1)}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n          </Form.Row>\n        </Form.Group>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"description\">\n            <Form.Label>JOB DESCRIPTION</Form.Label>\n            <Form.Control\n              required\n              as=\"textarea\"\n              name=\"description\"\n              type=\"input\"\n              placeholder=\"Description\"\n              onChange={(e) => setData(e, \"description\")}\n              values={values.description}\n            />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>WORKING TIME</Form.Label>\n            <Form.Control\n              required\n              name=\"workingTime\"\n              type=\"input\"\n              placeholder=\"workingTime\"\n              onChange={(e) => setData(e, \"workingTime\")}\n              values={values.workingTime}\n            />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>EXPERIENCE</Form.Label>\n            <Form.Control\n              required\n              name=\"experience\"\n              type=\"input\"\n              placeholder=\"Experience\"\n              onChange={(e) => setData(e, \"experience\")}\n              values={values.experience}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>LOCATION</Form.Label>\n            <Form.Control\n              required\n              name=\"location\"\n              type=\"input\"\n              placeholder=\"Location\"\n              onChange={(e) => setData(e, \"location\")}\n              values={values.location}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>LAST DATE</Form.Label>\n            <Form.Group>\n              <TextField\n                required\n                name=\"lastDate\"\n                placeholder=\"Last Date\"\n                onChange={(e) => setData(e, \"lastDate\")}\n                values={values.lastDate}\n                variant=\"standard\"\n                style={{ backgroundColor: \"white\" }}\n                type=\"date\"\n              ></TextField>\n            </Form.Group>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>NO-OF VACCANCY</Form.Label>\n            <Form.Control\n              required\n              name=\"noOfVacencies\"\n              type=\"input\"\n              placeholder=\"No Of Vacancies\"\n              onChange={(e) => setData(e, \"noOfVacencies\")}\n              values={values.noOfVacencies}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"salary\">\n            <Form.Label>SALARY</Form.Label>\n            <Form.Control\n              required\n              name=\"salary\"\n              type=\"number\"\n              placeholder=\"Salary\"\n              onChange={(e) => setData(e, \"salary\")}\n              values={values.salary}\n            />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>FEILD</Form.Label>\n            <Form.Control\n              required\n              name=\"field\"\n              type=\"input\"\n              placeholder=\"Field\"\n              onChange={(e) => setData(e, \"field\")}\n              values={values.field}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>RECRUITER</Form.Label>\n            <Form.Control\n              required\n              name=\"recruiter\"\n              type=\"string\"\n              placeholder=\"Recruiter\"\n              onChange={(e) => setData(e, \"recruiter\")}\n              values={values.recruiter}\n            />\n          </Form.Group>\n        </Form.Row>\n        {/* <Form.Row>\n          <Form.Group as={Col} controlId=\"resume\">\n            <Form.Label>RESUME</Form.Label>\n            <Form.File id=\"resume\" />\n          </Form.Group>\n        </Form.Row> */}\n        <Form.Row>\n          <Form.Group controlId=\"status\">\n            <Form.Label>STATUS</Form.Label>\n            <Form.Control as=\"select\" onChange={(e) => setData(e, \"status\")}>\n              <option value=\"1\">ACTIVE</option>\n              <option value=\"0\">EXPIRED</option>\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group controlId=\"certified\">\n            <Form.Label>CERTIFIED</Form.Label>\n            <Form.Control\n              values={values.certified}\n              as=\"select\"\n              onChange={(e) => setData(e, \"certified\")}\n            >\n              {bool.map((data, index) => (\n                <option key={index} values={data.value}>\n                  {data.value}\n                </option>\n              ))}\n              {/* <option value=\"yes\" selected>\n                CERTIFIED\n              </option>\n              <option value=\"no\">NOT CERTIFIED</option> */}\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group controlId=\"certified\">\n            <Form.Label> PRIME MEMBER</Form.Label>\n            <Form.Control\n              values={values.primeMember}\n              as=\"select\"\n              onChange={(e) => setData(e, \"primeMember\")}\n            >\n              {bool.map((data, index) => (\n                <option key={index} values={data.value}>\n                  {data.value}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n        <Link to=\"/jobs\">\n          <Button>Back</Button>\n        </Link>\n        <Button onClick={() => submit()}>Save</Button>\n      </Form>\n    </div>\n  );\n}\n","export const server = \"http://localhost:7000/\";\nexport const serImg = \"http://localhost:7000/img/\";\n\nexport const createJob = \"/job/create\";\nexport const getJOb = \"/job/getJob\";\nexport const addSkill = \"/skill/insert\";\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\nimport * as ReactDOM from \"react-dom\";\n// import { addSkill, serImg, server } from \"../../utils/url\";\nimport { useRef } from \"react\";\n\nfunction CategoryUpdate(props) {\n  // const [category, setCategory] = useState([]);\n  const [values, setValues] = useState({\n    name: \"\",\n    parent: \"\",\n    sortOrder: \"\",\n    image: \"\",\n  });\n\n  useEffect(() => {\n    // console.log({ log: props.pass[0] });\n    // setCategory(props.pass[0]);\n    setValues(props.pass[0]);\n  });\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"parent\", \"sortOrder\", \"image\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.translations = {\n      english: values.name,\n    };\n    body.name = values.name;\n    post(\"/skill/updateSkill\", body)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n\n  const imageAdd = (e) => {\n    let formdata = new FormData();\n    formdata.append(\"image\", e.target.files[0]);\n\n    post(\"/image/insertOne\", formdata).then((result) => {\n      console.log(result.body.doc.path);\n      // const files = { image: result.body.doc.path }];\n      setValues({ ...values, image: result.body.doc.path });\n    });\n  };\n\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n  return (\n    <div>\n      <h1>update</h1>\n      <Form style={{ display: \"flex\", flexDirection: \"row\" }} onSubmit={submit}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => setData(e, \"name\")}\n            value={values.name}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Parent</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"parent\"\n            placeholder=\"parent\"\n            onChange={(e) => setData(e, \"parent\")}\n            value={values.parent}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>SortOrder</Form.Label>\n          <FormControl\n            type=\"Number\"\n            required\n            name=\"sortOrder\"\n            placeholder=\"sortOrder\"\n            onChange={(e) => setData(e, \"sortOrder\")}\n            value={values.sortOrder}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <FormControl\n            type=\"file\"\n            required\n            name=\"image\"\n            onChange={(e) => imageAdd(e)}\n            value={imageAdd.image}\n          />\n        </Form.Group>\n        <Button onClick={() => submit()}>save</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default CategoryUpdate;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\n// import * as ReactDOM from \"react-dom\";\nimport { addSkill, serImg } from \"../../utils/url\";\nimport { useRef } from \"react\";\nimport CategoryUpdate from \"./CategoryUpdate\";\n\nfunction Category() {\n  const refs = useRef();\n  const [passData, setPassData] = useState([]);\n  const [mount, setmount] = useState(false);\n\n  const [skills, setSkills] = useState([]);\n  const [values, setValues] = useState({\n    name: \"\",\n    parent: \"\",\n    sortOrder: \"\",\n    image: \"\",\n  });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"parent\", \"sortOrder\", \"image\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.translations = {\n      english: values.name,\n    };\n    body.name = values.name;\n    post(addSkill, body)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n\n  const imageAdd = (e) => {\n    let formdata = new FormData();\n    formdata.append(\"image\", e.target.files[0]);\n\n    post(\"/image/insertOne\", formdata).then((result) => {\n      console.log(result.body.doc.path);\n      // const files = { image: result.body.doc.path }];\n      setValues({ ...values, image: result.body.doc.path });\n    });\n  };\n\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n\n  const fetchData = async () => {\n    const response = await post(\"/skill/list\").then((response) => {\n      console.log(response.body.doc);\n      setSkills(response.body.doc);\n    });\n  };\n  return (\n    <div className=\"container\">\n      <h1>category</h1>\n      <Form style={{ display: \"flex\", flexDirection: \"row\" }} onSubmit={submit}>\n        <Form.Group className=\"form-group\">\n          <Form.Label>Name</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"input\"\n            required\n            name=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => setData(e, \"name\")}\n            value={values.name}\n          />\n        </Form.Group>\n        {/* <Form.Group  className=\"form-group\">\n          <Form.Label>Transitions</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"translations\"\n            placeholder=\"translations\"\n            onChange={(e) => setData(e, \"translations\")}\n            value={values.translations}\n          />\n        </Form.Group> */}\n        {/* <Form.Group  className=\"form-group\">\n          <Form.Label>Children</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"childrens\"\n            placeholder=\"children\"\n            onChange={(e) => setData(e, \"childrens\")}\n            value={values.childrens}\n          />\n        </Form.Group> */}\n        <Form.Group className=\"form-group\">\n          <Form.Label>Parent</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"input\"\n            required\n            name=\"parent\"\n            placeholder=\"parent\"\n            onChange={(e) => setData(e, \"parent\")}\n            value={values.parent}\n          />\n        </Form.Group>\n        <Form.Group className=\"form-group\">\n          <Form.Label>SortOrder</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"Number\"\n            required\n            name=\"sortOrder\"\n            placeholder=\"sortOrder\"\n            onChange={(e) => setData(e, \"sortOrder\")}\n            value={values.sortOrder}\n          />\n        </Form.Group>\n        <Form.Group className=\"form-group\">\n          <Form.Label>Image</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"file\"\n            required\n            name=\"image\"\n            onChange={(e) => imageAdd(e)}\n            value={imageAdd.image}\n          />\n        </Form.Group>\n        <Form.Group className=\"form-group\">\n          <Form.Label></Form.Label>\n          <Button style={{ marginTop: \"3rem\" }} onClick={() => submit()}>\n            save\n          </Button>\n        </Form.Group>\n      </Form>\n\n      {mount && <CategoryUpdate pass={passData} />}\n\n      {/* shoe category */}\n      <div className=\"tableContainer container\">\n        <Table striped>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>name</th>\n              <th>SortOrder</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n          <tbody>\n            {skills.map((data, index) => (\n              <tr key={index}>\n                <td>{data.name.slice(1)}</td>\n                <td>{data.sortOrder}</td>\n                <td>\n                  <img width=\"100\" height=\"100\" src={serImg + data.image} />\n                </td>\n                <td>\n                  {/* edit operation */}\n                  <Button\n                    onClick={() => {\n                      post(\"/skill/list\", {\n                        _id: data._id,\n                      }).then((res) => {\n                        setPassData(res.body.doc);\n\n                        setmount(!mount);\n                      });\n                    }}\n                  >\n                    edit\n                  </Button>\n                </td>\n                {/* <td>\n                  <Button variant=\"danger\" \n                  >\n                    <i className=\"fas fa-times\" />\n                  </Button>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default Category;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Button, Card, Form, FormControl, FormLabel } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { post } from \"../../utils/agent\";\nimport validator from \"validator\";\nfunction Login() {\n  const [err, setErr] = useState(\"\");\n  const [perr, setPerr] = useState(\"\");\n  const [data, setData] = useState({\n    mobile: \"\",\n    password: \"\",\n  });\n  function handle(e) {\n    const newData = { ...data };\n    newData[e.target.name] = e.target.value;\n\n    setData(newData);\n    console.log(data);\n  }\n  // submit\n  function submit(e) {\n    e.preventDefault();\n    post(\"/admin/user/login\", data)\n      .then((res) => {\n        console.log(res.body.token);\n        window.localStorage.setItem(\"auth-key\", res.body.token);\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <div\n      className=\"login\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        marginTop: \"5rem\",\n      }}\n    >\n      <Card style={{ width: \"30rem\", padding: \"3rem\", borderRadius: \"2rem\" }}>\n        <h1 style={{ color: \"#000\" }}>Login</h1>\n\n        <Form\n          size=\"lg\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n          onSubmit={(e) => submit(e)}\n        >\n          <FormLabel>Username</FormLabel>\n          <FormControl\n            required\n            className=\"input\"\n            type=\"string\"\n            name=\"mobile\"\n            placeholder=\"mob\"\n            onChange={(e) => handle(e)}\n          />\n\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            required\n            className=\"input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={(e) => handle(e)}\n          />\n          <Button type=\"submit\">login</Button>\n          {/* <Link to=\"/clogin\">\n            <a>create an account</a>\n          </Link> */}\n        </Form>\n      </Card>\n    </div>\n  );\n}\nexport default Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\n\nfunction FilterUser() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filter, setfilter] = useState(\"\");\n  const [taluk, settaluk] = useState([]);\n\n  useEffect(() => {\n    console.log(districts[0].taluk);\n  });\n  //   district array\n\n  const districts = [\n    {\n      dist: \"Trivandrum\",\n      taluk: [\n        { tname: \"Neyyattinkara\" },\n        { tname: \"Kattakkada\" },\n        { tname: \"Chirayinkeezhu\" },\n        { tname: \"Varkala\" },\n        { tname: \"Nedumangadu\" },\n        { tname: \"Thiruvananthapuram\" },\n      ],\n    },\n    {\n      dist: \"Kollam\",\n      taluk: [\n        { tname: \"Punalur\" },\n        { tname: \"Pathanapuram\" },\n        { tname: \"Kottarakkara\" },\n        { tname: \"Kunnathoor\" },\n        { tname: \"Kollam\" },\n        { tname: \"Karunagappally\" },\n      ],\n    },\n    {\n      dist: \"Pathanamthitta\",\n      taluk: [\n        { tname: \"Adoor\" },\n        { tname: \"Mallappally\" },\n        { tname: \"Thiruvalla\" },\n        { tname: \"Ranni\" },\n        { tname: \"Kozhencherry\" },\n        { tname: \"Konni\" },\n      ],\n    },\n    {\n      dist: \"Alappuzha\",\n      taluk: [\n        { tname: \"Cherthala \" },\n        { tname: \"Ambalappuzha \" },\n        { tname: \"Kuttanad \" },\n        { tname: \"Karthikappally \" },\n        { tname: \"Mavelikkara \" },\n        { tname: \"Chenganoor\" },\n      ],\n    },\n    {\n      dist: \"Kottayam\",\n      taluk: [\n        { tname: \"Kottayam \" },\n        { tname: \"Vaikom \" },\n        { tname: \"Kanjirappally \" },\n        { tname: \"Meenachil \" },\n        { tname: \"Changanasserry \" },\n      ],\n    },\n    {\n      dist: \"Idukki\",\n      taluk: [\n        { tname: \"Udumbanchola\" },\n        { tname: \"Idukki\" },\n        { tname: \"Devikulam \" },\n        { tname: \"Thodupuzha \" },\n        { tname: \"Peermedu \" },\n      ],\n    },\n    {\n      dist: \"Ernakulam\",\n      taluk: [\n        { tname: \"Kanayannur \" },\n        { tname: \"Kochi \" },\n        { tname: \"Aluva \" },\n        { tname: \"Kunnathunad \" },\n        { tname: \"Kothamangalam \" },\n        { tname: \"Muvattupuzha \" },\n        { tname: \"Paravur \" },\n      ],\n    },\n    {\n      dist: \"Thrissur\",\n      taluk: [\n        { tname: \"Kodungallur\" },\n        { tname: \"Chavakkad\" },\n        { tname: \"Mukundapuram\" },\n        { tname: \"Thrissur\" },\n        { tname: \"Thalapilly\" },\n        { tname: \"Chalakudy\" },\n        { tname: \"Kunnamkulam\" },\n      ],\n    },\n    {\n      dist: \"Palakkad\",\n      taluk: [\n        { tname: \"Palakkad\" },\n        { tname: \"Chittur\" },\n        { tname: \"Alathoor\" },\n        { tname: \"Mannarkkad\" },\n        { tname: \"Ottappalam\" },\n        { tname: \"Pattambi\" },\n      ],\n    },\n    {\n      dist: \"Malappuram\",\n      taluk: [\n        { tname: \"Perinthalmanna\" },\n        { tname: \"Eranad\" },\n        { tname: \"Nilambur\" },\n        { tname: \"Tirur\" },\n        { tname: \"Ponnani\" },\n        { tname: \"Thiroorangadi\" },\n        { tname: \"Kondotty\" },\n      ],\n    },\n    {\n      dist: \"Kozhikode\",\n      taluk: [\n        { tname: \"Kozhikode\" },\n        { tname: \"Koyilandy\" },\n        { tname: \"Vadakara\" },\n        { tname: \"Thamarassery\" },\n      ],\n    },\n    {\n      dist: \"Wayanad\",\n      taluk: [\n        { tname: \"Mananthavady\" },\n        { tname: \"Vythiri\" },\n        { tname: \"Sulthan Bathery\" },\n      ],\n    },\n    {\n      dist: \"Kannur\",\n      taluk: [\n        { tname: \" Taliparamba \" },\n        { tname: \"Thalassery\" },\n        { tname: \"Kannur\" },\n        { tname: \"Iritty\" },\n        { tname: \"Payyannur\" },\n      ],\n    },\n    {\n      dist: \"Kasaragod\",\n      taluk: [\n        { tname: \" Hosdurg\" },\n        { tname: \"Vellarikundu\" },\n        { tname: \"Manjeshwaram\" },\n        { tname: \"Kasaragod\" },\n      ],\n    },\n  ];\n\n  const qualification = [\n    { qual: \"None\" },\n    { qual: \"SSLC\" },\n    { qual: \"Plus two\" },\n    { qual: \"ITI\" },\n    { qual: \"Diploma\" },\n    { qual: \"UG\" },\n    { qual: \"PG\" },\n    { qual: \"Other\" },\n  ];\n\n  const language = [\n    { lan: \"Malayalam\" },\n    { lan: \"Tamil\" },\n    { lan: \"Hindi\" },\n    { lan: \"English\" },\n  ];\n  const SortTaluk = districts.map((data) => {\n    return data.taluk;\n  });\n  //   const app = SortTaluk.map((data) => {\n  //     return data.tname;\n  //   });\n\n  // search data\n\n  function handleChange(event) {\n    setSearchTerm(event.target.value);\n    // console.log(searchTerm);\n  }\n\n  // filter list data\n\n  function filterlist(event) {\n    // console.log(event.target.value);\n    let t;\n    districts.map(e => { \n      if(event.target.value == e.dist)\n            t = e.taluk\n     });\n     settaluk(t);\n    //  console.log(t);\n    //  console.log(taluk);\n    setfilter(event.target.value);\n    console.log(searchTerm);\n  }\n  return (\n    <div className=\"container\">\n      <h1 style={{ textAlign: \"center \" }}>Filter</h1>\n      <div className=\"formContainer\">\n        <Form\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Age </Form.Label>\n            <FormControl\n              type=\"input\"\n              required\n              name=\"\"\n              placeholder=\"name\"\n              onChange=\"\"\n              value=\"\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>district</Form.Label>\n            <Form.Control as=\"select\" value={filter} onChange={(e)=>filterlist(e)}>\n              {districts.map((district, index) => (\n                <option key={index} value= {district.dist}>\n                  {district.dist}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>taluk</Form.Label>\n            <Form.Control as=\"select\" value={filter} >\n              {taluk ? taluk.map((data, index) => (\n                <option key={index} value={data.tname}>\n                  {data.tname}\n                </option>\n              )):\"\"}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Qualification</Form.Label>\n            <Form.Control as=\"select\">\n              {qualification.map((data, index) => (\n                <option key={index} value=\"\">\n                  {data.qual}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Languages</Form.Label>\n            <Form.Control as=\"select\">\n              {language.map((data, index) => (\n                <option key={index} value=\"\">\n                  {data.lan}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </div>\n      <div className=\"tableContainer\">\n        <Table>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>SlNo</th>\n              <th>Name</th>\n              <th>Taluk</th>\n              <th>district</th>\n              <th>Age</th>\n              <th>qualification</th>\n              <th>language</th>\n              <th>Status</th>\n\n              <th>PrimeMember</th>\n              <th>\n                <FormControl\n                  className=\"search\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  value={searchTerm}\n                  onChange={handleChange}\n                />\n              </th>\n              <th>\n                <Button variant=\"light\" type=\"\">\n                  <i className=\"fas fa-filter\" />\n                </Button>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Vishnu</td>\n              <td>Mannarkkad</td>\n              <td>Palakkad</td>\n              <td>21</td>\n              <td>Diploma</td>\n              <td>Malayalam</td>\n              <td>1</td>\n              <td>yes</td>\n              <td></td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default FilterUser;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\n\nfunction FilterJob() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    fetchCategory();\n  }, []);\n\n  // fetch category\n  const fetchCategory = async () => {\n    let response = await post(\"/skill/list/\").then((response) => {\n      console.log(response.body.doc);\n      setCategories(response.body.doc);\n    });\n  };\n  // search data\n\n  function handleChange(event) {\n    setSearchTerm(event.target.value);\n    // console.log(searchTerm);\n  }\n\n  return (\n    <div className=\"filterJob\" style={{ padding: \"5rem\" }}>\n      <h1 style={{ textAlign: \"center \" }}>Filter</h1>\n      <div className=\"formContainer container\">\n        <Form\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <Form.Group className=\"form-group\">\n            <Form.Label>Company Name</Form.Label>\n            <FormControl\n              className=\"input\"\n              type=\"input\"\n              required\n              name=\"\"\n              placeholder=\"name\"\n              onChange=\"\"\n              value=\"\"\n            />\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control as=\"select\" onChange=\"\" className=\"input\">\n              {categories.map((data, index) => (\n                <option key={index} value=\"\">\n                  {data.name.slice(1)}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label>Vacancies</Form.Label>\n            <FormControl\n              className=\"input\"\n              type=\"input\"\n              required\n              name=\"vacancies\"\n              placeholder=\"vacancies\"\n              onChange=\"\"\n              value=\"\"\n            />\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label>Salary</Form.Label>\n            <FormControl\n              className=\"input\"\n              type=\"input\"\n              required\n              name=\"salary\"\n              placeholder=\"salary\"\n              onChange=\"\"\n              value=\"\"\n            />\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label>Location</Form.Label>\n            <FormControl\n              className=\"input\"\n              type=\"input\"\n              required\n              name=\"location\"\n              placeholder=\"location\"\n              onChange=\"\"\n              value=\"\"\n            />\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label>Date</Form.Label>\n            <FormControl\n              className=\"input\"\n              type=\"date\"\n              required\n              name=\"date\"\n              placeholder=\"location\"\n              onChange=\"\"\n              value=\"\"\n            />\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label>Status</Form.Label>\n            <Form.Control as=\"select\" className=\"input\">\n              <option key=\"\" value=\"1\">\n                1\n              </option>\n              <option key=\"\" value=\"0\">\n                0\n              </option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"form-group\">\n            <Form.Label></Form.Label>\n            <Button style={{ borderRadius: \"1rem\", marginTop: \"3rem\" }}>\n              <i className=\"fas fa-filter\" />\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n      <div className=\"tableContainer\">\n        <Table>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>SlNo</th>\n              <th>Company Name</th>\n              <th>Vacancies</th>\n              <th>Job Position</th>\n              <th>Category</th>\n              <th>Salary</th>\n              <th>Location</th>\n              <th>Status</th>\n              <th>lastDate</th>\n              <th>PrimeMember</th>\n              <th>\n                <FormControl\n                  className=\"search\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  value={searchTerm}\n                  onChange={handleChange}\n                />\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Oppo</td>\n              <td>10</td>\n              <td>Designer</td>\n              <td>Mechanical</td>\n              <td>20000</td>\n              <td>China</td>\n              <td>1</td>\n              <td>10/10/10</td>\n              <td>yes</td>\n              <td></td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default FilterJob;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\n\nfunction CourseUpdate(props) {\n  const [course, setCourse] = useState([]);\n  const [values, setValues] = useState({\n    name: \"\",\n    parent: \"\",\n    sortOrder: \"\",\n    image: \"\",\n  });\n  useEffect(() => {\n    setValues(props.pass[0]);\n  });\n\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"parent\", \"sortOrder\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.translations = {\n      english: values.name,\n    };\n    body.name = values.name;\n    post(\"/course/update\", body)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n  return (\n    <div>\n      <h1>update</h1>\n      <Form style={{ display: \"flex\", flexDirection: \"row\" }} onSubmit={submit}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => setData(e, \"name\")}\n            value={values.name}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Parent</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"parent\"\n            placeholder=\"parent\"\n            onChange={(e) => setData(e, \"parent\")}\n            value={values.parent}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>SortOrder</Form.Label>\n          <FormControl\n            type=\"Number\"\n            required\n            name=\"sortOrder\"\n            placeholder=\"sortOrder\"\n            onChange={(e) => setData(e, \"sortOrder\")}\n            value={values.sortOrder}\n          />\n        </Form.Group>\n        {/* <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <FormControl\n            type=\"file\"\n            required\n            name=\"image\"\n            onChange={(e) => imageAdd(e)}\n            value={imageAdd.image}\n          />\n        </Form.Group> */}\n        <Button onClick={() => submit()}>save</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default CourseUpdate;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\nimport * as ReactDOM from \"react-dom\";\nimport { addSkill, serImg, server } from \"../../utils/url\";\nimport { useRef } from \"react\";\nimport CourseUpdate from \"./CourseUpdate\";\nfunction Course() {\n  const [course, setCourse] = useState([]);\n  const [values, setValues] = useState({\n    name: \"\",\n    parent: \"\",\n    sortOrder: \"\",\n    image: \"\",\n  });\n  const [passData, setPassData] = useState([]);\n  const [mount, setmount] = useState(false);\n\n  //   const imageAdd = (e) => {\n  //     let formdata = new FormData();\n  //     formdata.append(\"image\", e.target.files[0]);\n  //   };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"parent\", \"sortOrder\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.translations = {\n      english: values.name,\n    };\n    body.name = values.name;\n    post(\"/course/insert\", body)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n  const fetchData = async () => {\n    const response = await post(\"/course/list\").then((response) => {\n      console.log(response.body.doc);\n      setCourse(response.body.doc);\n    });\n  };\n\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n  return (\n    <div className=\"container\">\n      <h1>Course</h1>\n      <Form style={{ display: \"flex\", flexDirection: \"row\" }} onSubmit={submit}>\n        <Form.Group className=\"form-group\">\n          <Form.Label>Name</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"input\"\n            required\n            name=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => setData(e, \"name\")}\n            value={values.name}\n          />\n        </Form.Group>\n        <Form.Group className=\"form-group\">\n          <Form.Label>Parent</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"input\"\n            required\n            name=\"parent\"\n            placeholder=\"parent\"\n            onChange={(e) => setData(e, \"parent\")}\n            value={values.parent}\n          />\n        </Form.Group>\n        <Form.Group className=\"form-group\">\n          <Form.Label>SortOrder</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"Number\"\n            required\n            name=\"sortOrder\"\n            placeholder=\"sortOrder\"\n            onChange={(e) => setData(e, \"sortOrder\")}\n            value={values.sortOrder}\n          />\n        </Form.Group>\n        {/* <Form.Group  className=\"form-group\">\n          <Form.Label>Image</Form.Label>\n          <FormControl\n            type=\"file\"\n            required\n            name=\"image\"\n            onChange={(e) => imageAdd(e)}\n            value={imageAdd.image}\n          />\n        </Form.Group> */}\n        <Form.Group className=\"form-group\">\n          <Form.Label></Form.Label>\n          <Button style={{ marginTop: \"3rem\" }} onClick={() => submit()}>\n            save\n          </Button>\n        </Form.Group>\n      </Form>\n\n      {mount && <CourseUpdate pass={passData} />}\n      {/* shoe category */}\n      <div className=\"tableContainer\">\n        <Table striped>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>name</th>\n              <th>SortOrder</th>\n              {/* <th>Parent</th> */}\n              <th>edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {course.map((data, index) => (\n              <tr key={index}>\n                <td>{data.name.slice(1)}</td>\n                <td>{data.sortOrder}</td>\n                <td>\n                  {/* edit operation */}\n                  <Button\n                    onClick={() => {\n                      post(\"/course/list\", {\n                        _id: data._id,\n                      }).then((res) => {\n                        setPassData(res.body.doc);\n\n                        setmount(!mount);\n                      });\n                    }}\n                  >\n                    edit\n                  </Button>\n                </td>\n                {/* <td>{data._id}</td> */}\n                {/* <td>\n                  <Button variant=\"danger\">\n                    <i className=\"fas fa-times\" />\n                  </Button>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default Course;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\nfunction QualUpdate(props) {\n  const [qual, setQual] = useState([]);\n\n  const [values, setValues] = useState({\n    name: \"\",\n    parent: \"\",\n    sortOrder: \"\",\n    image: \"\",\n  });\n  useEffect(() => {\n    setValues(props.pass[0]);\n    console.log(props.pass[0]);\n  });\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"parent\", \"sortOrder\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.translations = {\n      english: values.name,\n    };\n    body.name = values.name;\n    post(\"/qualification/update\", body)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n  const fetchData = async () => {\n    const response = await post(\"/qualification/list\").then((response) => {\n      console.log(response.body.doc);\n      setQual(response.body.doc);\n    });\n  };\n\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n  return (\n    <div>\n      <h1>update</h1>\n      <Form style={{ display: \"flex\", flexDirection: \"row\" }} onSubmit={submit}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => setData(e, \"name\")}\n            value={values.name}\n          />\n        </Form.Group>\n        {/* <Form.Group>\n          <Form.Label>Parent</Form.Label>\n          <FormControl\n            type=\"input\"\n            required\n            name=\"parent\"\n            placeholder=\"parent\"\n            onChange={(e) => setData(e, \"parent\")}\n            value={values.parent}\n          />\n        </Form.Group> */}\n        <Form.Group>\n          <Form.Label>SortOrder</Form.Label>\n          <FormControl\n            type=\"Number\"\n            required\n            name=\"sortOrder\"\n            placeholder=\"sortOrder\"\n            onChange={(e) => setData(e, \"sortOrder\")}\n            value={values.sortOrder}\n          />\n        </Form.Group>\n        {/* <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <FormControl\n            type=\"file\"\n            required\n            name=\"image\"\n            onChange={(e) => imageAdd(e)}\n            value={imageAdd.image}\n          />\n        </Form.Group> */}\n        <Button onClick={() => submit()}>save</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default QualUpdate;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\nimport * as ReactDOM from \"react-dom\";\nimport { addSkill, serImg, server } from \"../../utils/url\";\nimport { useRef } from \"react\";\nimport QualUpdate from \"./QualUpdate\";\nfunction Qualification() {\n  const [qual, setQual] = useState([]);\n\n  const [values, setValues] = useState({\n    name: \"\",\n    parent: \"\",\n    sortOrder: \"\",\n    image: \"\",\n  });\n  const [passData, setPassData] = useState([]);\n  const [mount, setmount] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"parent\", \"sortOrder\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.translations = {\n      english: values.name,\n    };\n    body.name = values.name;\n    post(\"/qualification/insert\", body)\n      .then((result) => {\n        console.log(result);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  const bool = [\n    {\n      value: \"yes\",\n    },\n    {\n      value: \"no\",\n    },\n  ];\n  const fetchData = async () => {\n    const response = await post(\"/qualification/list\").then((response) => {\n      console.log(response.body.doc);\n      setQual(response.body.doc);\n    });\n  };\n\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n  };\n  return (\n    <div className=\"container\">\n      <h1>Qualification Level</h1>\n      <Form style={{ display: \"flex\", flexDirection: \"row\" }} onSubmit={submit}>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"input\"\n            required\n            name=\"name\"\n            placeholder=\"name\"\n            onChange={(e) => setData(e, \"name\")}\n            value={values.name}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Parent</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"input\"\n            required\n            name=\"parent\"\n            placeholder=\"parent\"\n            onChange={(e) => setData(e, \"parent\")}\n            value={values.parent}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>SortOrder</Form.Label>\n          <FormControl\n            className=\"input\"\n            type=\"Number\"\n            required\n            name=\"sortOrder\"\n            placeholder=\"sortOrder\"\n            onChange={(e) => setData(e, \"sortOrder\")}\n            value={values.sortOrder}\n          />\n        </Form.Group>\n        {/* <Form.Group>\n          <Form.Label>Image</Form.Label>\n          <FormControl\n            type=\"file\"\n            required\n            name=\"image\"\n            onChange={(e) => imageAdd(e)}\n            value={imageAdd.image}\n          />\n        </Form.Group> */}\n        <Form.Group>\n          <Button style={{ marginTop: \"3rem\" }} onClick={() => submit()}>\n            save\n          </Button>\n        </Form.Group>\n      </Form>\n      {mount && <QualUpdate pass={passData} />}\n\n      {/* shoe category */}\n      <div className=\"tableContainer container\">\n        <Table striped>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>name</th>\n              <th>SortOrder</th>\n              {/* <th>Image</th> */}\n              <th>Edit</th>\n              <th>Del</th>\n            </tr>\n          </thead>\n          <tbody>\n            {qual.map((data, index) => (\n              <tr key={index}>\n                <td>{data.name.slice(1)}</td>\n                <td>{data.sortOrder}</td>\n                <td>\n                  {/* edit operation */}\n                  <Button\n                    onClick={() => {\n                      post(\"/qualification/list\", {\n                        _id: data._id,\n                      }).then((res) => {\n                        setPassData(res.body.doc);\n\n                        setmount(!mount);\n                      });\n                    }}\n                  >\n                    edit\n                  </Button>\n                </td>\n                {/* <td>\n                  <img width=\"100\" height=\"100\" src={serImg + data.image} />\n                </td> */}\n                {/* <td>{data.parent}</td> */}\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                      post(\"/qualification/update\", {\n                        _id: data._id,\n                        status: 4,\n                      })\n                        .then(() => {\n                          window.location.reload(true);\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                        });\n                    }}\n                  >\n                    <i className=\"fas fa-times\" />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default Qualification;\n","import React, { useEffect, useState } from \"react\";\nimport \"./payment.css\";\nimport { Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { post } from \"../../utils/agent\";\nimport PlanUpdate from \"./PlanUpdate\";\n\nfunction Plan() {\n  const [plan, setPlan] = useState([]);\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    policy: \"\",\n    amount: \"\",\n  });\n  const [passData, setPassData] = useState([]);\n  const [mount, setmount] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // submit data to server\n\n  const submit = () => {\n    let body = {};\n    let keys = [\"name\", \"description\", \"policy\", \"amount\"];\n    for (let i = 0; i < keys.length; i++) {\n      body[keys[i]] = values[keys[i]];\n    }\n    // for (let i of Object.keys(body)) {\n    //   if (body[i] === \"\" || body[i].length === 0) {\n    //     ReactDOM.findDOMNode(refs[i]).focus();\n\n    //     return;\n    //   }\n    // }\n    body.name = values.name;\n    post(\"/plan/insert\", body)\n      .then((result) => {\n        console.log(result);\n        window.location.reload(false);\n      })\n      .catch(console.log);\n\n    // console.log(body);\n  };\n\n  // handle values\n  const setData = (event, key) => {\n    setValues({ ...values, [key]: event.target.value });\n    // console.log(values);\n  };\n\n  // fetch payment data\n\n  const fetchData = async () => {\n    const response = await post(\"/plan/\").then((response) => {\n      console.log(response.body.doc);\n      setPlan(response.body.doc);\n    });\n  };\n\n  return (\n    <div className=\"payment container\">\n      <div>\n        <Form\n          style={{ display: \"flex\", flexDirection: \"row\" }}\n          onSubmit={submit}\n        >\n          <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <FormControl\n              type=\"input\"\n              required\n              name=\"name\"\n              placeholder=\"name\"\n              onChange={(e) => setData(e, \"name\")}\n              value={values.name}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Policy</Form.Label>\n            <FormControl\n              type=\"input\"\n              required\n              name=\"policy\"\n              placeholder=\"policy\"\n              onChange={(e) => setData(e, \"policy\")}\n              value={values.policy}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <FormControl\n              type=\"input\"\n              required\n              name=\"description\"\n              placeholder=\"description\"\n              onChange={(e) => setData(e, \"description\")}\n              value={values.description}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Amount</Form.Label>\n            <FormControl\n              type=\"input\"\n              required\n              name=\"amount\"\n              placeholder=\"amount\"\n              onChange={(e) => setData(e, \"amount\")}\n              value={values.amount}\n            />\n          </Form.Group>\n          {/* <Form.Group>\n            <Form.Label>SortOrder</Form.Label>\n            <FormControl\n              type=\"Number\"\n              required\n              name=\"sortOrder\"\n              placeholder=\"sortOrder\"\n            />\n          </Form.Group> */}\n          {/* <Form.Group>\n            <Form.Label>Image</Form.Label>\n            <FormControl type=\"file\" required name=\"image\" />\n          </Form.Group> */}\n          <Button onClick={() => submit()}>save</Button>\n        </Form>\n        {/* {mount && <PlanUpdate pass={passData} />} */}\n      </div>\n      <div className=\"tableContainer\">\n        <Table striped>\n          <thead className=\"tableHead\">\n            <tr>\n              <th>Name</th>\n              <th>Policy</th>\n              <th>Description</th>\n              <th>Amount</th>\n              {/* <th>Icon</th> */}\n            </tr>\n          </thead>\n          <tbody>\n            {plan.map((data, index) => (\n              <tr key={index}>\n                <td>{data.name}</td>\n                <td>{data.policy}</td>\n                <td>{data.description}</td>\n                <td>{data.amount}</td>\n                {/* <td>\n                  <img width=\"100\" height=\"100\" src={data.icon} />\n                </td> */}\n                {/* <td>\n                  <Button\n                    onClick={() => {\n                      post(\"/plan/\", {\n                        _id: data._id,\n                      }).then((res) => {\n                        setPassData(res.body.doc);\n\n                        setmount(!mount);\n                      });\n                    }}\n                  >\n                    edit\n                  </Button>\n                </td> */}\n                <td>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                      post(\"/plan/delete\", {\n                        _id: data._id,\n                      })\n                        .then(() => {\n                          window.location.reload(false);\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                        });\n                    }}\n                  >\n                    <i className=\"fas fa-times\" />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default Plan;\n// const plans = [\n//   {\n//     policy: \"policy 1\",\n//     name: \"Name !\",\n//     description: \"policy 1 duration 2months \",\n//     amount: \"2000\",\n//     icon: \"icon image here\",\n//   },\n//   {\n//     policy: \"policy 2\",\n//     name: \"Name 1213!\",\n//     description: \" duration 6months \",\n//     amount: \"5000\",\n//     icon: \"icon image here\",\n//   },\n// ];\n","import React, { useEffect, useState } from \"react\";\nimport { post } from \"../../utils/agent\";\n\nfunction ApplieduseList(props) {\n  const [para, setPara] = useState(\"\");\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    console.log(props.match.params);\n    // setPara(props.match.params);\n    fetchData();\n  }, []);\n  //   fetch Users\n  let status = list.status;\n\n  const fetchData = async () => {\n    await post(\"/user/filter\", { _id: props.match.params.id })\n      .then((result) => {\n        console.log(result.body);\n        setList(result.body);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"inner-container\"></h1>\n      {status === true ? <h1>{list.message}</h1> : <h1>list coming soon</h1>}\n    </div>\n  );\n}\n\nexport default ApplieduseList;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./components/home/home\";\nimport Navbar from \"./components/navbar/nav\";\nimport UserList from \"./components/users/userList\";\nimport UserAdd from \"./components/users/userAdd\";\nimport Job from \"./components/jobs/Job\";\nimport JobAdd from \"./components/jobs/JobAdd\";\nimport Category from \"./components/category/Category\";\nimport Login from \"./components/login/Login\";\nimport FilterUser from \"./components/users/FilterUser\";\nimport FilterJob from \"./components/jobs/FilterJob\";\nimport Course from \"./components/course/Course\";\nimport Qualification from \"./components/qualification/Qualification\";\nimport AppliedJobs from \"./components/appliedjobs/AppliedJobs\";\n// import createLogin from \"./components/login/createLogin\";\nimport useToken from \"./utils/useToken\";\nimport Plan from \"./components/payment/Plan\";\nimport ApplieduseList from \"./components/appliedjobs/ApplieduseList\";\nfunction App() {\n  const token = localStorage.getItem(\"auth-key\");\n\n  if (!token) {\n    return <Login />;\n  }\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Switch>\n          {/* <Route path=\"/login\" component={Login} />\n          <Route path=\"/clogin\" exact component={createLogin} /> */}\n          <Route path=\"/\" exact component={HomePage}></Route>\n          <Route path=\"/users\" component={UserList}></Route>\n          <Route path=\"/filteruser\" exact component={FilterUser}></Route>\n          <Route path=\"/users-add\" component={UserAdd}></Route>\n          <Route path=\"/category\" exact component={Category}></Route>\n          <Route path=\"/payment\" component={Plan}></Route>\n          <Route path=\"/jobs\" component={Job}></Route>\n          <Route path=\"/jobs-add\" exact component={JobAdd}></Route>\n          <Route path=\"/filterjob\" exact component={FilterJob}></Route>\n          {/* <Route path=\"/appliedjob\" exact component={AppliedJobs}></Route> */}\n          <Route\n            path=\"/applicantlist/:id\"\n            exact\n            component={ApplieduseList}\n          ></Route>\n\n          <Route path=\"/course\" exact component={Course}></Route>\n          <Route path=\"/qualification\" exact component={Qualification}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}